import java.util.Scanner;
import java.util.Random;

public class Mora {
	
	public Mora() {
		this.input = new Scanner(System.in);
		this.randomNum = new Random();
	}
	
	public int generateRandomNumber(){
		return this.min + randomNum.nextInt(this.max);
	}
	
	public void init() {
		this.evenScore = 0;
		this.oddScore = 0;
	}
	
	public boolean selectPlayerType(){
		
		System.out.println("Select player of choice");
		System.out.println("For Odds Player, press 1");
		System.out.println("For Even Player, press 2");
		
		try {
			this.player = this.input.nextInt();
		}catch (Exception e) {
			System.out.println("Invalid entry, pls supply numbers between 1 and 2");
		}	
		
		
		if (this.player > 2) {
			System.out.println("Sorry, you have selected a wrong player.\n You can only select between 1 and 2");
			return false;
		}
		
		if (this.player == 1) {
			System.out.println("You have selected to be Odds player");
			//this.player_type[1] = 
		}else{
			System.out.println("You have selected to be Evens player");
		}
		
		return true;
		
	}
	
	public boolean checkGameState(){
		boolean state = false;
		if (getEvenScore() < 6 && getOddScore() < 6) {
			state = true;
		}else{
			// reset scores
			this.init();
		}
		
		return state;
	}
	
	public void playGame(int round){
		System.out.println("\n\nRound " + (int) (round + 1) );
		System.out.print("How many fingers would you like to display between 1 - 10: ");
		int player_fingers = this.input.nextInt();
		
		int computer_fingers = this.generateRandomNumber();
		System.out.println("Fingers generated by computer:" + computer_fingers);
		
		// store both fingers inside array
		this.playerFingerHistory[round] = player_fingers; 
		this.computerFingerHistory[round] = computer_fingers;
		
		computeScore(player_fingers, computer_fingers, round);
		
	}
	
	private void computeScore(int player_fingers, int computer_fingers, int round){
		int sum = 0;
		sum = player_fingers + computer_fingers;
		
		if (player_fingers > computer_fingers) {
			if (this.player == 1) {
				setOddScore(1);
			}else{
				setEvenScore(1);
			}
		}else if  (computer_fingers > player_fingers){
			if (this.player == 1) {
				setEvenScore(1);
			}else{
				setOddScore(1);
			}
		}
		
		// determine is sum is even or odd
		if (sum % 2 == 0) {
			this.scoreHistory[round][2] = getEvenScore();
			this.scoreHistory[round][1] = getOddScore();
			setEvenScore(2);
			System.out.println("Even player win.");
		}else{
			this.scoreHistory[round][1] = getOddScore();
			this.scoreHistory[round][2] = getEvenScore();
			setOddScore(2);
			System.out.println("Odds player win.");
		}

		System.out.println("Even player score:" + getEvenScore());
		System.out.println("Odd player score:" + getOddScore());
		
		
	}
	
	public void displayScoreHistory(){
		System.out.printf("Odd Score \t Even Score \n");
		for (int j =0; j < scoreHistory[1].length; ++j ) {
			System.out.printf(" %d \t %d \n",this.scoreHistory[j][1], this.scoreHistory[j][2]);
		}
	}
	
	public void displayFingerHistory(){
		System.out.println("\n Finger History");
		System.out.printf("Computer \t Player \n");
		for (int j =0; j < this.playerFingerHistory.length; ++j ) {
			System.out.printf(" %d \t \t %d \n",this.computerFingerHistory[j], this.playerFingerHistory[j]);
		}
	}
	
	public void determineWinner(int round){
		System.out.println("\n\n\n");
		if (this.player == 1) {
			if (getEvenScore() > getOddScore()) {
				System.out.println("The Computer Won");
				this.computerWonHistory[round] = 1;
				System.out.println("computer won game round" + round);
			}else{
				System.out.println("The Human Won");
				this.playerWonHistory[round] = 1;
				System.out.println("human won game round" + round);
			}
		}else{
			if (getEvenScore() > getOddScore()) {
				System.out.println("The Human Won");
				this.playerWonHistory[round] = 1;
				System.out.println("human won game round" + round);
			}else{
				System.out.println("The Computer Won");
				this.computerWonHistory[round] = 1;
				System.out.println("computer won game round" + round);
			}
		}
	}
	
	public void displayGameHistory(){
		int totalround = 0;
		int roundwon = 0;
		int roundlost = 0;
	    for (int element : this.playerWonHistory) {
	    	totalround += element;
	    	roundwon += element;
	    }
	    for (int element : this.computerWonHistory) {
	    	totalround += element;
	    	roundlost += element;
	    }
		System.out.printf("\nTotal Number of Round played: %d", totalround );
		System.out.printf("\nNumber of rounds won: %d", roundwon);
		System.out.printf("\nNumber of rounds loss: %d", roundlost);
	}
	
	public int getOddScore() {
		return oddScore;
	}

	public void setOddScore(int oddScore) {
		this.oddScore = this.oddScore + oddScore;
	}

	public int getEvenScore() {
		return evenScore;
	}

	public void setEvenScore(int evenScore) {
		this.evenScore = this.evenScore + evenScore;
	}

	private int min = 1;
	private int max = 10;
	private int computerScore = 0;
	private int playerScore = 0;
	private int oddScore = 0;
	private int evenScore = 0;
	private Random randomNum;
	
	private int[] computerFingerHistory = new int[6];
	private int[] playerFingerHistory = new int[6];
	private int[] computerWonHistory = new int[10];
	private int[] playerWonHistory = new int[10];
	private int[][] scoreHistory = new int[6][6];
//	private int[][] winHistory = new int[2][10];
	
	
	
	private Scanner input;
	private int player;
	

}
